#!/usr/bin/env ruby

# Originally borrowed from Jim Garvin, but heavily modified over the years
# http://github.com/coderifous/dotfiles/blob/master/bin/git-stats.rb

require "time"
require "date"
require "shellwords"
require "active_support"
require "active_support/core_ext/date"
require "active_support/core_ext/object"
require "active_support/core_ext/time"
require "active_support/core_ext/numeric"

def debug(msg)
  puts msg if ENV["DEBUG"]
end

if ARGV[0] == "--after"
  after = Time.parse(ARGV[1])
elsif ARGV[0].present?
  weeks_shift = 0
  day = nil

  if ARGV[0] == "last-week"
    weeks_shift = -1
  elsif ARGV[0] == "this-week"
    weeks_shift = 0
  elsif ARGV[0].to_i <= 0
    weeks_shift = ARGV[0].to_i
  else
    day = Time.parse(ARGV[0])
  end

  day ||= Time.parse(Date.today.to_s)
  day += weeks_shift.weeks
  after = day.beginning_of_week
  before = day.end_of_week
end

after_option  = ["--after", after.iso8601].shelljoin   if after
before_option = ["--before", before.iso8601].shelljoin if before

authors = {}
command = "git shortlog #{after_option} #{before_option} -sne --no-merges"
debug(command)
open("| #{command}").each do |line|
  line =~ /\d+\s+(.+)\s+<(.+)>/
  name = Regexp.last_match(1)
  email = Regexp.last_match(2)
  authors[email] = name
  # authors[email] = "#{name} <#{email}>"
end

author_width = 1 + authors.values.map(&:length).max.to_i
format = "%#{author_width}s %8s %8s %12s %12s %12s\n"
line_width = 58 + author_width

puts " Weekly Report: #{after.to_date} to #{before.to_date}" if after && before
puts " Report: #{after.to_date} to today" if after && !before
puts "-" * line_width
printf(format, *%w(author commits touches inserts deletes net))
puts "-" * line_width

total_commits = total_touches = total_inserts = total_deletes = 0
authors.each do |email, name|
  author_commits = author_touches = author_inserts = author_deletes = 0
  command = "git log #{after_option} #{before_option} --shortstat --no-merges --author=#{email.shellescape} | grep -E 'files? changed'"
  debug(command)
  open("| #{command}").each do |line|
    touches = line.match(/(\d+) files? changed/)
    inserts = line.match(/(\d+) insertion/)
    deletes = line.match(/(\d+) deletion/)
    author_commits += 1               if touches
    author_touches += touches[1].to_i if touches
    author_inserts += inserts[1].to_i if inserts
    author_deletes += deletes[1].to_i if deletes
  end

  printf(format, name, author_commits, author_touches, author_inserts, -1 * author_deletes, author_inserts - author_deletes)

  total_commits += author_commits
  total_touches += author_touches
  total_inserts += author_inserts
  total_deletes += author_deletes
end

puts "-" * line_width
printf(format, authors.size, total_commits, total_touches, total_inserts, -1 * total_deletes, total_inserts - total_deletes)
